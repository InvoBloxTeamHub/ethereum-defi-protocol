"""Test Uniswap V3 util functions."""
import pytest

from eth_defi.uniswap_v3.utils import encode_path


@pytest.mark.parametrize(
    "path,fees,is_exact_output,expected_encoded_path",
    [
        (
            [
                "0x0000000000000000000000000000000000000001",
                "0x0000000000000000000000000000000000000002",
            ],
            [
                3000,
            ],
            False,
            "0x0000000000000000000000000000000000000001000bb80000000000000000000000000000000000000002",
        ),
        (
            [
                "0x0000000000000000000000000000000000000001",
                "0x0000000000000000000000000000000000000002",
            ],
            [
                3000,
            ],
            True,
            "0x0000000000000000000000000000000000000002000bb80000000000000000000000000000000000000001",
        ),
        (
            [
                "0x0000000000000000000000000000000000000001",
                "0x0000000000000000000000000000000000000002",
                "0x0000000000000000000000000000000000000003",
            ],
            [
                3000,
                500,
            ],
            False,
            "0x0000000000000000000000000000000000000001000bb800000000000000000000000000000000000000020001f40000000000000000000000000000000000000003",
        ),
        (
            [
                "0x0000000000000000000000000000000000000001",
                "0x0000000000000000000000000000000000000002",
                "0x0000000000000000000000000000000000000003",
            ],
            [
                3000,
                500,
            ],
            True,
            "0x00000000000000000000000000000000000000030001f40000000000000000000000000000000000000002000bb80000000000000000000000000000000000000001",
        ),
    ],
)
def test_encode_path(path, fees, is_exact_output, expected_encoded_path):
    """Test encode path.

    Based on: https://github.com/Uniswap/v3-sdk/blob/1a74d5f0a31040fec4aeb1f83bba01d7c03f4870/src/utils/encodeRouteToPath.test.ts
    """
    encoded = encode_path(path, fees, is_exact_output)
    assert type(encoded) == bytes
    hex_encoded = f"0x{encoded.hex()}"
    assert hex_encoded == expected_encoded_path
